apiVersion: v1
kind: Service
metadata:
  name: mcashchain-wiki-service
  labels:
    app.kubernetes.io/name: mcashchain-wiki-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mcashchain-wiki-service

---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: mcashchain-wiki-service
  labels:
    app.kubernetes.io/name: mcashchain-wiki-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mcashchain-wiki-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mcashchain-wiki-service
    spec:
      containers:
        - name: mcashchain-wiki
          image: "mcash/mcashchain-wiki:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
                path: /
                port: http
          readinessProbe:
              httpGet:
                path: /
                port: http
          env:
          resources:
            limits:
              memory: 20Mi
            requests:
              cpu: 50m
              memory: 20Mi

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mcashchain-wiki
  labels:
    app.kubernetes.io/name: mcashchain-wiki
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx/client_max_body_size: 50m
spec:
  tls:
    - hosts:
        - "developer.mcash.network"
      secretName: developer-mcash-network-tls
  rules:
    - host: "developer.mcash.network"
      http:
        paths:
          - path: /
            backend:
              serviceName: "mcashchain-wiki-service"
              servicePort: http
